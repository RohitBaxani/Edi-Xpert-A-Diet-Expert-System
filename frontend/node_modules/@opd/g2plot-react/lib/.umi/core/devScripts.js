"use strict";

if (window.g_initWebpackHotDevClient) {
  window.g_initWebpackHotDevClient({
    tryApplyUpdates: function (_tryApplyUpdates) {
      function tryApplyUpdates(_x) {
        return _tryApplyUpdates.apply(this, arguments);
      }

      tryApplyUpdates.toString = function () {
        return _tryApplyUpdates.toString();
      };

      return tryApplyUpdates;
    }(function (onHotUpdateSuccess) {
      // @ts-ignore
      if (!module.hot) {
        window.location.reload();
        return;
      }

      function isUpdateAvailable() {
        // @ts-ignore
        return window.g_getMostRecentCompilationHash() !== __webpack_hash__;
      } // TODO: is update available?
      // @ts-ignore


      if (!isUpdateAvailable() || module.hot.status() !== 'idle') {
        return;
      }

      function handleApplyUpdates(err, updatedModules) {
        if (err || !updatedModules || window.g_getHadRuntimeError()) {
          window.location.reload();
          return;
        }

        onHotUpdateSuccess === null || onHotUpdateSuccess === void 0 ? void 0 : onHotUpdateSuccess();

        if (isUpdateAvailable()) {
          // While we were updating, there was a new update! Do it again.
          tryApplyUpdates();
        }
      } // @ts-ignore


      module.hot.check(true).then(function (updatedModules) {
        handleApplyUpdates(null, updatedModules);
      }, function (err) {
        handleApplyUpdates(err, null);
      });
    })
  });
}