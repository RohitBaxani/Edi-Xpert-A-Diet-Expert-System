{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Aashna\\\\Downloads\\\\MyDietDiary-main\\\\MyDietDiary-main\\\\Django-React-Calorie-Tracker-master\\\\frontend\\\\src\\\\components\\\\statistics\\\\Statistics.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport axios from 'axios';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport { Line } from 'react-chartjs-2';\nfunction convertToDataSet(arr) {\n  var xLabel;\n  var yLabel;\n  xLabel = arr.map(p => p.date_eaten);\n  yLabel = arr.map(p => p.totalCalories);\n  const dataSet = {\n    labels: xLabel,\n    datasets: [{\n      label: 'Total calories',\n      fill: false,\n      lineTension: 0.5,\n      backgroundColor: 'rgba(75,192,192,1)',\n      borderColor: 'rgba(0,0,0,1)',\n      borderWidth: 2,\n      data: yLabel\n    }]\n  };\n  return dataSet;\n}\nfunction convertToWeightDataSet(arr) {\n  var xLabel;\n  var yLabel;\n  xLabel = arr.map(p => p.date_recorded);\n  yLabel = arr.map(p => p.number);\n  const dataSet = {\n    labels: xLabel,\n    datasets: [{\n      label: 'Weight (Kg)',\n      fill: false,\n      lineTension: 0.5,\n      backgroundColor: 'rgba(75,192,192,1)',\n      borderColor: 'rgba(0,0,0,1)',\n      borderWidth: 2,\n      data: yLabel\n    }]\n  };\n  return dataSet;\n}\nconst Statistics = () => {\n  _s();\n  const auth = useSelector(state => state.auth);\n  const [calorieLineState, updateCalorieLineState] = useState();\n  const [weightLineState, updateWeightLineState] = useState();\n  const [isLoading, setIsLoading] = useState(true);\n\n  // need to query for the weight of the user throughout the week/month\n  // maybe query for how often a food was eaten this week?\n\n  useEffect(() => {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Token ${auth.token}`\n      }\n    };\n    axios.get('http://localhost:3000/api/30-day-calories', config).then(res => {\n      updateCalorieLineState(convertToDataSet(res.data.data));\n    });\n    axios.get('http://localhost:3000/api/user/30-day-weight', config).then(res => {\n      updateWeightLineState(convertToWeightDataSet(res.data.data));\n      setIsLoading(false);\n    });\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, isLoading ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 26\n    }\n  }, \"Loading..\") : /*#__PURE__*/React.createElement(Container, {\n    className: \"mt-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Line, {\n    data: calorieLineState,\n    options: {\n      title: {\n        display: true,\n        text: 'Recorded calorie consumption per day.',\n        fontSize: 20\n      },\n      scales: {\n        yAxes: [{\n          ticks: {\n            beginAtZero: true\n          }\n        }]\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Line, {\n    data: weightLineState,\n    options: {\n      title: {\n        display: true,\n        text: 'Recorded weight per day.',\n        fontSize: 20\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 25\n    }\n  })))));\n};\n_s(Statistics, \"3jyjHVPJGAmxLOm3QiIqEEoVdC8=\", false, function () {\n  return [useSelector];\n});\n_c = Statistics;\nexport default Statistics;\nvar _c;\n$RefreshReg$(_c, \"Statistics\");","map":{"version":3,"names":["React","useEffect","useState","useSelector","axios","Container","Row","Col","Line","convertToDataSet","arr","xLabel","yLabel","map","p","date_eaten","totalCalories","dataSet","labels","datasets","label","fill","lineTension","backgroundColor","borderColor","borderWidth","data","convertToWeightDataSet","date_recorded","number","Statistics","_s","auth","state","calorieLineState","updateCalorieLineState","weightLineState","updateWeightLineState","isLoading","setIsLoading","config","headers","token","get","then","res","createElement","Fragment","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","className","options","title","display","text","fontSize","scales","yAxes","ticks","beginAtZero","_c","$RefreshReg$"],"sources":["C:/Users/Aashna/Downloads/MyDietDiary-main/MyDietDiary-main/Django-React-Calorie-Tracker-master/frontend/src/components/statistics/Statistics.js"],"sourcesContent":["import React,{useEffect,useState} from 'react'\nimport {useSelector} from 'react-redux'\nimport axios from 'axios'\nimport {Container,Row,Col} from 'react-bootstrap'\nimport {Line} from 'react-chartjs-2';\n\n\nfunction convertToDataSet(arr){\n    var xLabel;\n    var yLabel;\n    xLabel = arr.map(p => p.date_eaten)\n    yLabel = arr.map(p => p.totalCalories)\n    const dataSet = {\n        labels: xLabel,\n        datasets: [\n            {\n            label: 'Total calories',\n            fill: false,\n            lineTension: 0.5,\n            backgroundColor: 'rgba(75,192,192,1)',\n            borderColor: 'rgba(0,0,0,1)',\n            borderWidth: 2,\n            data: yLabel\n            }\n        ]\n    }\n    return dataSet\n}\n\nfunction convertToWeightDataSet(arr){\n    var xLabel;\n    var yLabel;\n    xLabel = arr.map(p => p.date_recorded)\n    yLabel = arr.map(p => p.number)\n    const dataSet = {\n        labels: xLabel,\n        datasets: [\n            {\n            label: 'Weight (Kg)',\n            fill: false,\n            lineTension: 0.5,\n            backgroundColor: 'rgba(75,192,192,1)',\n            borderColor: 'rgba(0,0,0,1)',\n            borderWidth: 2,\n            data: yLabel\n            }\n        ]\n    }\n    return dataSet\n}\n\nconst Statistics = () => {\n    const auth = useSelector(state => state.auth)\n    const [calorieLineState,updateCalorieLineState] = useState()\n    const [weightLineState,updateWeightLineState] = useState()\n    const [isLoading,setIsLoading] = useState(true)\n    \n    // need to query for the weight of the user throughout the week/month\n    // maybe query for how often a food was eaten this week?\n\n    useEffect(()=>{\n        const config = {\n            headers:{\n                'Content-Type':'application/json',\n                'Authorization':`Token ${auth.token}`\n            }\n        }\n        axios.get('http://localhost:3000/api/30-day-calories',config)\n        .then(res=>{\n            updateCalorieLineState(convertToDataSet(res.data.data))\n            \n        })\n\n        axios.get('http://localhost:3000/api/user/30-day-weight',config)\n        .then(res=>{\n            updateWeightLineState(convertToWeightDataSet(res.data.data))\n            setIsLoading(false)\n        })\n\n    },[])\n\n    return (\n        <>\n            {isLoading ? <div>Loading..</div>:\n            <Container className=\"mt-3\">\n                <Row>\n                    <Col>\n                        <Line \n                            data= {calorieLineState}\n                            options = {{\n                                title:{\n                                    display:true,\n                                    text:'Recorded calorie consumption per day.',\n                                    fontSize:20,\n                                },\n                                scales:{\n                                    yAxes:[{\n                                        ticks:{\n                                            beginAtZero:true\n                                        }\n                                    }]\n                                }\n                            }}\n                        />\n                    </Col>\n                    <Col>\n                        <Line \n                            data= {weightLineState}\n                            options = {{\n                                title:{\n                                    display:true,\n                                    text:'Recorded weight per day.',\n                                    fontSize:20,\n                                },\n                            }}\n                        />\n                    </Col>\n                </Row>\n            </Container>\n            }\n        </>\n    )\n}\n\nexport default Statistics"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}