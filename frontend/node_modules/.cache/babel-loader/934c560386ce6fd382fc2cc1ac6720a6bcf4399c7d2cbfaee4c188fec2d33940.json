{"ast":null,"code":"import { GET_BREAKFAST, GET_CHEAT, GET_DINNER, GET_LUNCH, GET_SNACKS, ADD_FOOD, EDIT_FOOD, DELETE_FOOD, GET_CALORIES, UPDATE_CALORIES, GET_WEIGHT, UPDATE_WEIGHT } from '../actions/types';\nconst initialState = {\n  B: [],\n  L: [],\n  D: [],\n  S: [],\n  C: [],\n  calories: {\n    total: 0,\n    fat: 0,\n    protein: 0,\n    carbs: 0\n  },\n  user_weight: 0\n};\nexport default function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case GET_BREAKFAST:\n      return {\n        ...state,\n        B: action.payload\n      };\n    case GET_LUNCH:\n      return {\n        ...state,\n        L: action.payload\n      };\n    case GET_DINNER:\n      return {\n        ...state,\n        D: action.payload\n      };\n    case GET_SNACKS:\n      return {\n        ...state,\n        S: action.payload\n      };\n    case GET_CHEAT:\n      return {\n        ...state,\n        C: action.payload\n      };\n    case ADD_FOOD:\n      return {\n        ...state,\n        [action.payload.category]: [...state[action.payload.category], action.payload]\n      };\n    case DELETE_FOOD:\n      return {\n        ...state,\n        [action.payload.category]: state[action.payload.category].filter(food => food.id !== action.payload.id)\n      };\n    case EDIT_FOOD:\n      return {\n        ...state,\n        [action.payload.category]: state[action.payload.category].map(food => {\n          if (food.id !== action.payload.id) {\n            return food;\n          } else {\n            return {\n              ...food,\n              ...action.payload\n            };\n          }\n        })\n      };\n    case GET_CALORIES:\n      return {\n        ...state,\n        calories: {\n          total: action.payload.totalCalories,\n          fat: action.payload.fatCalories,\n          protein: action.payload.proteinCalories,\n          carbs: action.payload.carbsCalories\n        }\n      };\n    case UPDATE_CALORIES:\n      return {\n        ...state,\n        calories: {\n          total: state.calories.total + action.payload.total_calories,\n          fat: state.calories.fat + action.payload.fat,\n          protein: state.calories.protein + action.payload.protein,\n          carbs: state.calories.carbs + action.payload.carbs\n        }\n      };\n    case GET_WEIGHT:\n    case UPDATE_WEIGHT:\n      return {\n        ...state,\n        user_weight: action.payload\n      };\n    default:\n      return state;\n  }\n}","map":{"version":3,"names":["GET_BREAKFAST","GET_CHEAT","GET_DINNER","GET_LUNCH","GET_SNACKS","ADD_FOOD","EDIT_FOOD","DELETE_FOOD","GET_CALORIES","UPDATE_CALORIES","GET_WEIGHT","UPDATE_WEIGHT","initialState","B","L","D","S","C","calories","total","fat","protein","carbs","user_weight","state","arguments","length","undefined","action","type","payload","category","filter","food","id","map","totalCalories","fatCalories","proteinCalories","carbsCalories","total_calories"],"sources":["E:/Django-React-Calorie-Tracker-master1/frontend/src/reducers/nutrition.js"],"sourcesContent":["import {\n    GET_BREAKFAST,\n    GET_CHEAT,\n    GET_DINNER,\n    GET_LUNCH,\n    GET_SNACKS,\n    ADD_FOOD,\n    EDIT_FOOD,\n    DELETE_FOOD,\n    GET_CALORIES,\n    UPDATE_CALORIES,\n    GET_WEIGHT,\n    UPDATE_WEIGHT\n    \n} from '../actions/types'\n\nconst initialState = {\n    B:[],\n    L:[],\n    D:[],\n    S:[],\n    C:[],\n    calories:{\n        total:0,\n        fat:0,\n        protein:0,\n        carbs:0\n    },\n    user_weight:0\n}\n\nexport default function(state=initialState,action){\n    switch(action.type){\n        case GET_BREAKFAST:\n            return{\n                ...state,\n                B:action.payload\n            }\n        case GET_LUNCH:\n            return{\n                ...state,\n                L:action.payload\n            }\n        \n        case GET_DINNER:\n            return{\n                ...state,\n                D:action.payload\n            }            \n        case GET_SNACKS:\n            return {\n                ...state,\n                S:action.payload\n            }\n        case GET_CHEAT:\n            return {\n                ...state,\n                C:action.payload\n            }\n\n        case ADD_FOOD:\n            return{\n                ...state,\n                [action.payload.category]:[...state[action.payload.category],action.payload]\n            }\n\n        case DELETE_FOOD:\n           return {\n               ...state,\n               [action.payload.category]: state[action.payload.category].filter(food => food.id !== action.payload.id)\n           }\n\n        case EDIT_FOOD:\n            return {\n                ...state,\n                [action.payload.category]: state[action.payload.category].map(food =>{\n                    if (food.id !== action.payload.id){\n                        return food\n                    } else {\n                        return {\n                            ...food,\n                            ...action.payload\n                        }\n                    }\n                })\n            }\n\n        case GET_CALORIES:\n            return {\n                ...state,\n                calories:{\n                    total:action.payload.totalCalories,\n                    fat:action.payload.fatCalories,\n                    protein:action.payload.proteinCalories,\n                    carbs:action.payload.carbsCalories\n                }\n            }\n\n        case UPDATE_CALORIES:\n            return {\n                ...state,\n                calories:{\n                    total:state.calories.total + action.payload.total_calories,\n                    fat:state.calories.fat + action.payload.fat,\n                    protein:state.calories.protein + action.payload.protein,\n                    carbs:state.calories.carbs + action.payload.carbs\n                }\n            }\n        case GET_WEIGHT:\n        case UPDATE_WEIGHT:\n            return {\n                ...state,\n                user_weight:action.payload\n            }\n\n        default:\n            return state\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}