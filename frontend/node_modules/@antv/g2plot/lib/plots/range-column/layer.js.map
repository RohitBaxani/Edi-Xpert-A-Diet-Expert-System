{"version":3,"file":"layer.js","sourceRoot":"","sources":["../../../src/plots/range-column/layer.ts"],"names":[],"mappings":";;;AAAA,mCAA2C;AAC3C,4CAAqD;AAErD,kEAA8C;AAE9C,oEAA6E;AAC7E,yCAA4C;AAQ5C;IAA8C,4CAAuC;IAArF;QAAA,qEAuDC;QAzCQ,UAAI,GAAW,aAAa,CAAC;;IAyCtC,CAAC;IAtDe,kCAAiB,GAA/B;QACE,OAAO,cAAO,CACZ,OAAM,iBAAiB,WAAE,EACzB;YACE,KAAK,EAAE;gBACL,OAAO,EAAE,IAAI;gBACb,QAAQ,EAAE,OAAO;aAClB;SACF,EACD,EAAE,CACH,CAAC;IACJ,CAAC;IAIM,sCAAW,GAAlB;QACE,IAAI,CAAC,WAAW,EAAE,CAAC;QACnB,eAAe;QACf,IAAM,WAAW,GAAG,EAAE,CAAC;QACvB,IAAM,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC;QACnC,WAAI,CAAC,KAAK,EAAE,UAAC,IAAI;YACf,IAAM,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;YAC/B,WAAI,CAAC,QAAQ,EAAE,UAAC,GAAG;gBACjB,WAAW,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YAC9B,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;QACH,yBAAa,CAAC,WAAW,CAAC,CAAC;QAC3B,iBAAM,WAAW,WAAE,CAAC;IACtB,CAAC;IAES,oCAAS,GAAnB;QACE,iBAAM,SAAS,WAAE,CAAC;QAClB,IAAI,CAAC,MAAM,CAAC,OAAO,GAAG;YACpB,MAAM,EAAE;gBACN,SAAS,EAAE,0BAA0B;gBACrC,QAAQ,EAAE,GAAG;aACd;YACD,MAAM,EAAE;gBACN,SAAS,EAAE,0BAA0B;gBACrC,QAAQ,EAAE,GAAG;aACd;SACF,CAAC;IACJ,CAAC;IAES,sCAAW,GAArB;QACE,IAAI,IAAI,CAAC,OAAO,CAAC,KAAK,IAAI,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,OAAO,EAAE;YACpD,IAAM,KAAK,GAAG,IAAI,eAAgB,oBAChC,IAAI,EAAE,IAAI,CAAC,IAAI,EACf,IAAI,EAAE,IAAI,IACP,IAAI,CAAC,OAAO,CAAC,KAAK,EACrB,CAAC;YACH,KAAK,CAAC,MAAM,EAAE,CAAC;SAChB;IACH,CAAC;IACH,uBAAC;AAAD,CAAC,AAvDD,CAA8C,eAAe,GAuD5D;;AAED,yBAAgB,CAAC,aAAa,EAAE,gBAAgB,CAAC,CAAC","sourcesContent":["import { deepMix, each } from '@antv/util';\nimport { registerPlotType } from '../../base/global';\nimport { LayerConfig } from '../../base/layer';\nimport BaseColumnLayer from '../column/layer';\nimport { ColumnViewConfig } from '../column/interface';\nimport RangeColumnLabel, { RangeColumnLabelConfig } from './component/label';\nimport { setShapeCache } from './animation';\n\nexport interface RangeColumnViewConfig extends ColumnViewConfig {\n  label?: RangeColumnLabelConfig;\n}\n\nexport interface RangeColumnLayerConfig extends RangeColumnViewConfig, LayerConfig {}\n\nexport default class RangeColumnLayer extends BaseColumnLayer<RangeColumnLayerConfig> {\n  public static getDefaultOptions(): Partial<RangeColumnViewConfig> {\n    return deepMix(\n      super.getDefaultOptions(),\n      {\n        label: {\n          visible: true,\n          position: 'outer',\n        },\n      },\n      {}\n    );\n  }\n\n  public type: string = 'rangeColumn';\n\n  public afterRender() {\n    this.renderLabel();\n    // 为更新动画缓存shape\n    const shapeCaches = [];\n    const geoms = this.view.geometries;\n    each(geoms, (geom) => {\n      const elements = geom.elements;\n      each(elements, (ele) => {\n        shapeCaches.push(ele.shape);\n      });\n    });\n    setShapeCache(shapeCaches);\n    super.afterRender();\n  }\n\n  protected animation() {\n    super.animation();\n    this.column.animate = {\n      appear: {\n        animation: 'clipInFromCenterVertical',\n        duration: 600,\n      },\n      update: {\n        animation: 'updateFromCenterVertical',\n        duration: 600,\n      },\n    };\n  }\n\n  protected renderLabel() {\n    if (this.options.label && this.options.label.visible) {\n      const label = new RangeColumnLabel({\n        view: this.view,\n        plot: this,\n        ...this.options.label,\n      });\n      label.render();\n    }\n  }\n}\n\nregisterPlotType('rangeColumn', RangeColumnLayer);\n"]}