{"version":3,"file":"style-parser.js","sourceRoot":"","sources":["../../src/util/style-parser.ts"],"names":[],"mappings":";;;AAAA,mCAAmC;AAEnC,SAAS,eAAe,CAAC,OAAO,EAAE,IAAI;;IACpC,OAAO,CAAC,IAAI,GAAG,OAAA,IAAI,CAAC,IAAI,0CAAE,OAAO,EAAC,CAAC,sBAAM,IAAI,CAAC,IAAI,EAAG,CAAC,CAAC,IAAI,CAAC;IAC5D,OAAO,CAAC,KAAK,GAAG,OAAA,IAAI,CAAC,KAAK,0CAAE,OAAO,EACjC,CAAC,uCACM,IAAI,CAAC,KAAK,KACb,UAAU,EAAE,OAAO,CAAC,eAAe,IAEvC,CAAC,CAAC,IAAI,CAAC;IACT,OAAO,CAAC,QAAQ,GAAG,OAAA,IAAI,CAAC,QAAQ,0CAAE,OAAO,EAAC,CAAC,sBAAM,IAAI,CAAC,QAAQ,EAAG,CAAC,CAAC,IAAI,CAAC;IACxE,OAAO,CAAC,YAAY,GAAG,EAAE,CAAC;IAC1B,OAAO,CAAC,KAAK,GAAG,OAAA,IAAI,CAAC,KAAK,0CAAE,OAAO,EACjC,CAAC,sBACM,IAAI,CAAC,KAAK,EAEjB,CAAC,CAAC,IAAI,CAAC;IAET,IAAI,IAAI,CAAC,eAAe,EAAE;QACxB,OAAO,CAAC,YAAY,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;KACzC;IACD,IAAI,OAAO,CAAC,iBAAiB,EAAE;QAC7B,OAAO,CAAC,YAAY,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;KAC3C;IACD,IAAI,IAAI,CAAC,aAAa,EAAE;QACtB,OAAO,CAAC,YAAY,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;KACvC;IAED,aAAa;IACb,IAAI,IAAI,CAAC,IAAI,EAAE;QACb,IAAI,IAAI,CAAC,IAAI,CAAC,OAAO,KAAK,KAAK,EAAE;YAC/B,OAAO,CAAC,IAAI,GAAG,IAAI,CAAC;SACrB;aAAM;YACL,OAAO,CAAC,IAAI,GAAG,YAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAChC,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE;gBACnB,OAAO,CAAC,IAAI,GAAG,YAAK,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;aACvC;SACF;KACF;AACH,CAAC;AAeQ,0CAAe;AAbxB,SAAS,kBAAkB;IACzB,OAAO;AACT,CAAC;AAWyB,gDAAkB;AAT5C,SAAS,gBAAgB,CAAC,KAAK,EAAE,KAAK;IACpC,IAAM,QAAQ,GAAG,KAAK,CAAC,KAAK,CAAC;IAC7B,QAAQ,CAAC,SAAS,GAAG,KAAK,CAAC;AAC7B,CAAC;AAM6C,4CAAgB;AAJ9D,SAAS,qBAAqB;IAC5B,OAAO;AACT,CAAC;AAE+D,sDAAqB","sourcesContent":["import { clone } from '@antv/util';\n\nfunction AxisStyleParser(axisCfg, axis) {\n  axisCfg.line = axis.line?.visible ? { ...axis.line } : null;\n  axisCfg.title = axis.title?.visible\n    ? {\n        ...axis.title,\n        autoRotate: axisCfg.autoRotateTitle,\n      }\n    : null;\n  axisCfg.tickLine = axis.tickLine?.visible ? { ...axis.tickLine } : null;\n  axisCfg.overlapOrder = [];\n  axisCfg.label = axis.label?.visible\n    ? {\n        ...axis.label,\n      }\n    : null;\n\n  if (axis.autoRotateLabel) {\n    axisCfg.overlapOrder.push('autoRotate');\n  }\n  if (axisCfg.autoEllipsisLabel) {\n    axisCfg.overlapOrder.push('autoEllipsis');\n  }\n  if (axis.autoHideLabel) {\n    axisCfg.overlapOrder.push('autoHide');\n  }\n\n  // TODO: grid\n  if (axis.grid) {\n    if (axis.grid.visible === false) {\n      axisCfg.grid = null;\n    } else {\n      axisCfg.grid = clone(axis.grid);\n      if (axis.grid.style) {\n        axisCfg.grid = clone(axis.grid.style);\n      }\n    }\n  }\n}\n\nfunction TooltipStyleParser() {\n  return;\n}\n\nfunction LabelStyleParser(theme, style) {\n  const labelCfg = theme.label;\n  labelCfg.textStyle = style;\n}\n\nfunction AnnotationStyleParser() {\n  return;\n}\n\nexport { AxisStyleParser, TooltipStyleParser, LabelStyleParser, AnnotationStyleParser };\n"]}